<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coding Interface</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"  integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="../codemirror-5.65.16/lib/codemirror.css">
    <script src="../codemirror-5.65.16/mode/python/python.js"></script>
    <script src="../codemirror-5.65.16/lib/codemirror.js"></script>
    <script src="../codemirror-5.65.16/mode/clike/clike.js"></script>
    <link rel="stylesheet" href="../codemirror-5.65.16/theme/default.css">
    <script src="../codemirror-5.65.16/addon/edit/closebrackets.js"></script>
</head>

<body style="background-color: rgb(218, 221, 224);">
   
    <style>
        .container{
      width: 100%;
      height: 100vh;
      box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
      background-color: white;
      display: flex;
      flex-direction: row;
      margin-top: 10px;
      box-sizing: border-box;
      border-radius: 15px;
    }
    
    .problem{
      width: 50%;
      margin-bottom: 10px;
      margin-top: 10px;
      margin-left: 10px;
      border-radius: 15px;
      display: flex;
      flex-direction: column;
      box-sizing: border-box;
      box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
    }
    .submission{
      width: 50%;
      margin-bottom: 10px;
      margin-top: 10px;
      margin-left: 10px;
      border-radius: 15px;
    
      box-sizing: border-box;
      box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
    }
    .editor1{
      width: 50%;
      margin-bottom: 5px;
      box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
      margin-top: 10px;
      margin-left: 10px;
      border-radius: 15px;
      display: flex;
      flex-direction: column;
      box-sizing: border-box;
    }
    
    .statement{
      margin: 5px 5px 5px 5px;
      height: 50%;
    }
    
    .Example1{
      margin: 5px 5px 5px 5px;
      height: 25%;
      display: flex;
      flex-direction: column;
    }
    
    .Example2{
      margin: 5px 5px 5px 5px;
      height: 25%;
      display: flex;
      flex-direction: column;
    }
    
    .input{
      height: 40%;
      margin: 5px 5px 5px 5px;
    }
    
    
    .output{
      height: 40%;
      margin: 5px 5px 5px 5px;
    }
    
    .testcase{
      margin-bottom: 0px;
      height: 20%;
      width: 49%;
      margin: 5px 5px 0px 5px;
      position: absolute;
      bottom: 0;
    }
    
    .welcome{
      
      height: 40px;
    }
    
    .upper{
      display: flex;
      flex-direction: row;
    }
    
    .btnm{
     float: right;
     margin-left: 20%;
     
    }
    .btn1{
  align-items: center;
  appearance: none;
  background-color: #fff;
  border-radius: 24px;
  border-style: none;
  box-shadow: rgba(0, 0, 0, .2) 0 3px 5px -1px,rgba(0, 0, 0, .14) 0 6px 10px 0,rgba(0, 0, 0, .12) 0 1px 18px 0;
  box-sizing: border-box;
  color: #3c4043;
  margin-bottom: 10px;
  fill: currentcolor;
  font-family: "Google Sans",Roboto,Arial,sans-serif;
  font-size: 14px;
  font-weight: 500;
  height: 35px;
  justify-content: center;
  letter-spacing: .25px;
  line-height: normal;
  max-width: 100%;
  overflow: visible;
  padding: 2px 24px;
  position: relative;
  text-align: center;
  text-transform: none;
  width: auto;
  z-index: 0;
}

.btn1:hover {
  background: #F6F9FE;
  color: #174ea6;
}

.btn1:focus {
  outline: none;
  border: 2px solid #4285f4;
}
.sbtn{
 
  background: #5E5DF0;
  border-radius: 999px;
  box-shadow: #5E5DF0 0 10px 20px -10px;
  box-sizing: border-box;
  color: #FFFFFF;
  height: 35px;
  cursor: pointer;
  font-family: Inter,Helvetica,"Apple Color Emoji","Segoe UI Emoji",NotoColorEmoji,"Noto Color Emoji","Segoe UI Symbol","Android Emoji",EmojiSymbols,-apple-system,system-ui,"Segoe UI",Roboto,"Helvetica Neue","Noto Sans",sans-serif;
  font-size: 16px;
  font-weight: 700;
  line-height: 24px;
  opacity: 1;
  outline: 0 solid transparent;
  padding: 2px 24px;
  position: relative;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  width: fit-content;
  word-break: break-word;
  border: 0;
}
a{
  color: #F6F9FE;
  text-decoration: none;
}
a:hover{
  color: #3c4043;
}
    
    textarea{
      margin-top: 15px;
    }
    .desc button,.subs button{
      align-items: center;
  border-style: none;
  box-shadow: rgba(0, 0, 0, .2) 0 3px 5px -1px,rgba(0, 0, 0, .14) 0 6px 10px 0,rgba(0, 0, 0, .12) 0 1px 18px 0;
  box-sizing: border-box;
  color: #3c4043;
  margin-bottom: 10px;
  fill: currentcolor;
  
  font-size: 14px;
  font-weight: 500;
  height: 45px;
  justify-content: center;
  letter-spacing: .25px;
  line-height: normal;
  max-width: 100%;
  overflow: visible;
  padding: 2px 24px;
 
  width: auto;
  z-index: 0;
}
      </style>
    </head>
    <body>
      <div class="navbar">
    
      </div>
      <div class="welcome">
        <center>Welcome to Coding Interface!</center>
      </div>
      <div class="container" style="font-family: Verdana, Arial, Helvetica, sans-serif;">
        <div class="problem">
          <div class="options" style="height: 50px; width: 100%; ">
            <div class="desc" style="float: left; width: fit-content; height: 45px;"><button onclick="showContent('desc')">Description</button></div>
            <div class="subs" style="float: left; width: fit-content; height: 45px;"><button onclick="showContent('subs')">Solutions</button></div>
        </div>
          <div class="statement">

           <h2><%= problem.pid %>.<%= problem.ptitle %> </h2> <br>
            
            <%= problem.pstatement %>

          </div>
          <div class="Example1">
            <h3>Example 1</h3>
            <div class="input1"> Input: <%= problem.input1 %></div>
            <div class="output1">Output: <%= problem.output1 %> </div>
          </div>
          <div class="Example2">
            <h3>Example 2</h3>
            <div class="input1">Input:<%= problem.input2 %></div>
            <div class="output1">Output:<%= problem.output2 %> </div>
          </div>
        </div>

        <div class="submission" style="display: none;">
          <div class="options" style="height: 50px; width: 100%; ">
            <div class="desc" style="float: left; width: fit-content; height: 45px;"><button onclick="showContent('desc')">Description</button></div>
            <div class="subs" style="float: left; width: fit-content; height: 45px;"><button onclick="showContent('subs')">Solutions</button></div>
           <br><br><br> <textarea readonly style="height: 500px; width: 100%; outline: 0px;"><%= problem.solution %></textarea>

        </div>

        </div>
        <div class="editor1">
          <div class="upper">
              <div class="opt">
                <select class="form-select" id="inlineFormSelectPref" >
                    <option selected>Choose...</option>
                    <option value="Java">Java</option>
                    <option value="Cpp">Cpp</option>
                    <option value="Python">Python</option>
                </select>
              </div>
            <div class="btnm">
              <button type="button" class="btn1" id="run" >Execute</button>
              <button type="button" onclick="submit()"  class="sbtn" id="submit" >Submit</button>
            </div>
          </div>
         
          <textarea type="text" id="editor" style="border-radius: 15px;" class="form-control tedit" aria-label="First name"></textarea>
          <textarea type="text"  style="display: none;"  id="input" class="form-control h-75" aria-label="Last name"></textarea>
          <div id="output" style="display: none;"  aria-label="Last name"></div>
          <div class="result" style="height: 300px; background-color: #ffffff; padding-top: 10px;">
          <div id="testcase1" style=" border-radius: 10px; width: fit-content; padding: px;"></div>
          <div id="testcase2"></div>
          </div>
        </div>
      </div>
      <textarea id="i1" style="display: none;"><%= problem.input1 %></textarea>
      <textarea id="i2" style="display: none;"><%= problem.input2 %></textarea>
      <textarea id="o1" style="display: none;"><%= problem.output1 %></textarea>
      <textarea id="o2" style="display: none;"><%= problem.outut2 %></textarea>
    
            <script>
                    var editor = CodeMirror.fromTextArea(document.getElementById("editor"), {
            mode: "text/x-c++src",
            theme: "default",
            lineNumbers: true,
            autoCloseBrackets: true,
    
        })
        let i1= document.getElementById("i1")
        let i2= document.getElementById("i2")
        let o1= document.getElementById("o1")
        let o2= document.getElementById("o2")
        let t1=document.getElementById("testcase1")
        let t2=document.getElementById("testcase2")
        let ed=document.getElementsByClassName("editor1")
        var sbtn=document.getElementById("submit")
        var t1passed=false;
        var t2passed=false;
        
        function showContent(contentType) {
  document.querySelector('.problem').style.display = 'none';
  document.querySelector('.submission').style.display = 'none';
  if (contentType === 'desc') {
    document.querySelector('.problem').style.display = 'block';
  } else if (contentType === 'subs') {
    document.querySelector('.submission').style.display = 'block';
  }
}
      console.log(i1.value)
        var width = window.innerWidth
        var input = document.getElementById("input")
    var output = document.getElementById("output")
        var run = document.getElementById("run")
        editor.setSize(0.42 * width, "700")
        var option = document.getElementById("inlineFormSelectPref")
        option.addEventListener("change", function () {
            if (option.value == "Java") {
                editor.setOption("mode", "text/x-java")
            }
            else if (option.value == "python") {
                editor.setOption("mode", "text/x-python")
            }
            else {
                editor.setOption("mode", "text/x-c++src")
            }
        })
        function work(outputValue) {
    console.log("Output Value:", outputValue);
    var body = document.body;
    if (outputValue.trim() === "<%= problem.output1.trim() %>") { 
        t1.innerText=''
        t1.innerText="testcase1 passed"
        t1passed=true;
    } else{  
        t1.innerText=''
        t1.innerText="testcase1 failed"
        t1passed=false;
    }
}
function work2(outputValue) {
    console.log("Output Value:", outputValue);
    var body = document.body;
    if (outputValue.trim() === "<%= problem.output2.trim() %>") {
        t2.innerText=''
        t2.innerText="testcase2 passed"
        t2passed=true;

    } else{
        t2.innerText=''
        t2.innerText="testcase2 failed"
        t2passed=false;
    }
}
        var code;
        run.addEventListener("click", async function () {
            console.log("hello")
            code = {
                code: editor.getValue(),
            input: i1.value,
            lang: option.value
            }
            console.log(code)
            var oData = await fetch("http://localhost:8000/compile", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(code)
            })
            var d = await oData.json()

            console.log(d)
            output.innerText = d.output
            work(d.output)
            code.input=i2.value;
            var Data = await fetch("http://localhost:8000/compile", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(code)
            })
            var p = await Data.json()
            work2(p.output)

    })

    function submit() {
  if (t1passed === true && t2passed === true) {
    var submission = {
      code: editor.getValue(),
    };

    fetch('/submitcode/<%= problem.pid %>', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(submission),
    })
    .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      console.log('Submission successful:', data);
      window.location.href = "/submission";
    })
    .catch(error => {
      console.error('Error submitting code:', error);
      t1.innerText = "Error submitting code";
      t2.innerText = "";
    });
  } else {
    t1.innerText = "Submission is not accepted";
    t2.innerText = "";
  }
}

    </script>
    
      
    </body>
    </html>
